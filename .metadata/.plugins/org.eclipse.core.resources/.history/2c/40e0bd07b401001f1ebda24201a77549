import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.LinkedList;
import java.util.List;
//FileHelper
//This Program stores the files that Chatgpt json will be stored in
public class FileHelper {
	public static String readLinesAsString(File file) {
		List<String> returnLines = new LinkedList<String>();
		String text = "";
		try {
			text = new String(Files.readAllBytes(Paths.get(file.getAbsolutePath())),
					StandardCharsets.UTF_8);
		} catch (IOException e) {
			e.printStackTrace();
		}
		return text;
	}
	public static List<String> readLines(File file) {
		List<String> returnLines = new LinkedList<String>();
		try {
			String text = new String(Files.readAllBytes(Paths.get(file.getAbsolutePath())),
					StandardCharsets.UTF_8);
			String[] lines = text.split("\n");
			for (String line : lines) {
				returnLines.add(line);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return returnLines;
	}
	public static void writeStringToFile(String line, File file) {
		try {
			FileWriter myWriter = null;
			if (file.exists()) {
				myWriter = new FileWriter(file, true);//if file exists append to file. Works fine.
			} else {
				System.out.println("Could not find the file " + file + ". Creating it again");
				file.createNewFile();
				myWriter = new FileWriter(file);
			}
			myWriter.write(line);
			myWriter.close();
			// System.out.println("Successfully wrote to the file. "+file.getAbsolutePath());
		} catch (IOException e) {
			e.printStackTrace();
			System.out.println("An error occurred in writing to file " + file + " e=" + e);
		}
	}
}
public static String getChatResponse(String userPrompt) {
    StringBuffer response = new StringBuffer();
    try {
        URL url = new URL("https://api.openai.com/v1/chat/completions");
        HttpURLConnection con = (HttpURLConnection) url.openConnection();
        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type", "application/json");
        con.setRequestProperty("Accept", "application/json");
        con.setRequestProperty("OpenAI-Organization", "your-org-key");
        con.setDoOutput(true);
        con.setRequestProperty("Authorization", "Bearer your-api-key");

        // Prepare JSON input with the user's prompt
        String jsonInputString = String.format("{\"model\": \"gpt-3.5-turbo-0125\", \"messages\": [{\"role\": \"user\", \"content\": \"%s\"}]}", userPrompt);
        try (OutputStream os = con.getOutputStream()) {
            byte[] input = jsonInputString.getBytes(StandardCharsets.UTF_8);
            os.write(input, 0, input.length);
        }

        int responseCode = con.getResponseCode();
        System.out.println("Response Code : " + responseCode);
        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
        String inputLine;
        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }
        in.close();
    } catch (Exception e) {
        System.out.println(e.getMessage());
        return e.getMessage(); // Return the error message if an exception occurs
    }
    return response.toString(); // Return the response as a string
}